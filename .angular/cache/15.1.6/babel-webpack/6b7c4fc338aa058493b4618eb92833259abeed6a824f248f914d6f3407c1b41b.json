{"ast":null,"code":"import { of, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ChartService {\n  constructor() {\n    this.percentageSubject = new Subject();\n    this.charts = [{\n      id: 1,\n      percent: 0.25,\n      day: 'mon'\n    }, {\n      id: 2,\n      percent: 0.55,\n      day: 'tue'\n    }, {\n      id: 3,\n      percent: 0.45,\n      day: 'wed'\n    }, {\n      id: 4,\n      percent: 0.25,\n      day: 'thu'\n    }, {\n      id: 5,\n      percent: 0.1,\n      day: 'fri'\n    }, {\n      id: 6,\n      percent: 0.9,\n      day: 'sat'\n    }, {\n      id: 7,\n      percent: 0.8,\n      day: 'sun'\n    }];\n  }\n  getPercentage(percent) {\n    console.log(percent);\n    this.percentageSubject.next(percent);\n  }\n  getDataCharts() {\n    return of(this.charts);\n  }\n  returnPercentage() {\n    return this.percentageSubject.asObservable();\n  }\n}\nChartService.ɵfac = function ChartService_Factory(t) {\n  return new (t || ChartService)();\n};\nChartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChartService,\n  factory: ChartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,EAAE,EAAEC,OAAO,QAAQ,MAAM;;AAKlC,OAAM,MAAOC,YAAY;EAYvBC;IAXA,sBAAiB,GAAG,IAAIF,OAAO,EAAU;IACzC,WAAM,GAAG,CACP;MAAEG,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAE,EACpC;MAAEF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAE,EACpC;MAAEF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAE,EACpC;MAAEF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAE,EACpC;MAAEF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,GAAG;MAAEC,GAAG,EAAE;IAAK,CAAE,EACnC;MAAEF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,GAAG;MAAEC,GAAG,EAAE;IAAK,CAAE,EACnC;MAAEF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,GAAG;MAAEC,GAAG,EAAE;IAAK,CAAE,CACpC;EAEe;EAEhBC,aAAa,CAACF,OAAe;IAC3BG,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;IACpB,IAAI,CAACK,iBAAiB,CAACC,IAAI,CAACN,OAAO,CAAC;EACtC;EAEAO,aAAa;IACX,OAAOZ,EAAE,CAAC,IAAI,CAACa,MAAM,CAAC;EACxB;EAEAC,gBAAgB;IACd,OAAO,IAAI,CAACJ,iBAAiB,CAACK,YAAY,EAAE;EAC9C;;AAzBWb,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAc,SAAZd,YAAY;EAAAe,YAFX;AAAM","names":["of","Subject","ChartService","constructor","id","percent","day","getPercentage","console","log","percentageSubject","next","getDataCharts","charts","returnPercentage","asObservable","factory","providedIn"],"sourceRoot":"","sources":["D:\\Programmation\\frameworks\\Angular\\frontend Mentor\\expensesChart\\src\\app\\services\\chart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { of, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartService {\n  percentageSubject = new Subject<number>()\n  charts = [\n    { id: 1, percent: 0.25, day: 'mon' },\n    { id: 2, percent: 0.55, day: 'tue' },\n    { id: 3, percent: 0.45, day: 'wed' },\n    { id: 4, percent: 0.25, day: 'thu' },\n    { id: 5, percent: 0.1, day: 'fri' },\n    { id: 6, percent: 0.9, day: 'sat' },\n    { id: 7, percent: 0.8, day: 'sun' },\n  ];\n\n  constructor() { }\n\n  getPercentage(percent: number) {\n    console.log(percent)\n    this.percentageSubject.next(percent);\n  }\n\n  getDataCharts() {\n    return of(this.charts);\n  }\n\n  returnPercentage() {\n    return this.percentageSubject.asObservable()\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}