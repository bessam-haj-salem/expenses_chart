{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ChartService {\n  constructor() {\n    this.percentageSubject = new Subject();\n  }\n  getPercentage(percent) {\n    console.log(percent);\n    this.percentageSubject.next(percent);\n  }\n  returnPercentage() {\n    return this.percentageSubject.asObservable();\n  }\n}\nChartService.ɵfac = function ChartService_Factory(t) {\n  return new (t || ChartService)();\n};\nChartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChartService,\n  factory: ChartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,YAAY;EAGvBC;IAFA,sBAAiB,GAAG,IAAIF,OAAO,EAAU;EAEzB;EAEhBG,aAAa,CAACC,OAAe;IAC3BC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,IAAI,CAACG,iBAAiB,CAACC,IAAI,CAACJ,OAAO,CAAC;EACtC;EACAK,gBAAgB;IACd,OAAO,IAAI,CAACF,iBAAiB,CAACG,YAAY,EAAE;EAC9C;;AAXWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAU,SAAZV,YAAY;EAAAW,YAFX;AAAM","names":["Subject","ChartService","constructor","getPercentage","percent","console","log","percentageSubject","next","returnPercentage","asObservable","factory","providedIn"],"sourceRoot":"","sources":["D:\\Programmation\\frameworks\\Angular\\frontend Mentor\\expensesChart\\src\\app\\services\\chart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartService {\n  percentageSubject = new Subject<number>()\n\n  constructor() { }\n\n  getPercentage(percent: number) {\n    console.log(percent)\n    this.percentageSubject.next(percent);\n  }\n  returnPercentage() {\n    return this.percentageSubject.asObservable()\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}