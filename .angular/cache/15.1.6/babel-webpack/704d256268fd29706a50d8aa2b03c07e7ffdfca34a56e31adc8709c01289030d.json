{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Directive, Input } from '@angular/core';\nlet DataMoneyDirective = class DataMoneyDirective {\n  constructor(chartService, render) {\n    this.chartService = chartService;\n    this.render = render;\n  }\n  ngOnInit() {\n    console.dir(this.perce);\n    this.chartService.percentages$.subscribe(data => {\n      if (this.perce === data) {\n        this.el;\n      }\n    });\n  }\n  ngOnChanges(changes) {\n    console.log(changes);\n  }\n};\n__decorate([Input()], DataMoneyDirective.prototype, \"perce\", void 0);\nDataMoneyDirective = __decorate([Directive({\n  selector: '[appDataMoney]'\n})], DataMoneyDirective);\nexport { DataMoneyDirective };","map":{"version":3,"mappings":";AAAA,SACEA,SAAS,EAITC,KAAK,QAGA,eAAe;AAMf,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAE7BC,YAAoBC,YAA0B,EAAUC,MAAM;IAA1C,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;EAAG;EAEjEC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC;IACzB,IAAI,CAACL,YAAY,CAACM,YAAY,CAACC,SAAS,CAACC,IAAI,IAAG;MAC9C,IAAG,IAAI,CAACH,KAAK,KAAKG,IAAI,EAAE;QACtB,IAAI,CAACC,EAAE;;IAEX,CAAC,CAAC;EAEF;EACAC,WAAW,CAACC,OAAsB;IAChCR,OAAO,CAACS,GAAG,CAACD,OAAO,CAAC;EACtB;CACD;AAfUE,YAARhB,KAAK,EAAE,iDAAa;AADVC,kBAAkB,eAH9BF,SAAS,CAAC;EACTkB,QAAQ,EAAE;CACX,CAAC,GACWhB,kBAAkB,CAgB9B;SAhBYA,kBAAkB","names":["Directive","Input","DataMoneyDirective","constructor","chartService","render","ngOnInit","console","dir","perce","percentages$","subscribe","data","el","ngOnChanges","changes","log","__decorate","selector"],"sourceRoot":"","sources":["D:\\Programmation\\frameworks\\Angular\\frontend Mentor\\expensesChart\\src\\app\\directives\\data-money.directive.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Renderer2,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { ChartService } from '../services/chart.service';\n\n@Directive({\n  selector: '[appDataMoney]',\n})\nexport class DataMoneyDirective implements OnInit, OnChanges {\n  @Input() perce!: any;\n  constructor(private chartService: ChartService, private render) {}\n\n  ngOnInit(): void {\n    console.dir(this.perce);\n  this.chartService.percentages$.subscribe(data => {\n    if(this.perce === data) {\n      this.el\n    }\n  })\n    \n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(changes);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}